name: ðŸ¦¾ Bot deploy to test 34.42.21.49 # Test mini app bot server

env:
  DOCKER_COMPOSE_FILE: docker-compose.test.yml
  DOCKER_CONTEXT_HOST: ssh://root@34.42.21.49


# ---âœ„--- Copy-paste file from here. Remember to replace TEST_ to PROD_ ---âœ„---

on:
  workflow_dispatch:
    inputs:
      full_recreate:
        type: boolean
        description: "Recreate all services"
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          credentials_json: "${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}"

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: us-central1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: us-central1-docker.pkg.dev/local-pier-386815/autoproof/ap-telegram-mini-app-bot-test:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    env:
      BOT_TOKEN: ${{ secrets.TEST_BOT_TOKEN }}
      BOT_WEB_APP_LINK: ${{ secrets.TEST_BOT_WEB_APP_LINK }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          credentials_json: "${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}"

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: us-central1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - uses: arwynfr/actions-docker-context@v2
        with:
          docker_host: ${{ env.DOCKER_CONTEXT_HOST }}
          context_name: 'autoproof-mini-app-bot-ctx'
          ssh_cert: ${{ secrets.TEST_BOT_DEPLOY_SSH_CERT }}
          ssh_key: ${{ secrets.TEST_BOT_DEPLOY_SSH_KEY }}

      - name: Empty .env file
        run: touch .env

      - name: Shutdown all services
        if: ${{ inputs.full_recreate }}
        run: docker --context autoproof-mini-app-bot-ctx compose -f docker-compose.yml -f ${{ env.DOCKER_COMPOSE_FILE }} down

      - name: Start all services
        if: ${{ inputs.full_recreate }}
        run: docker --context autoproof-mini-app-bot-ctx compose -f docker-compose.yml -f ${{ env.DOCKER_COMPOSE_FILE }} up -d

      - name: Recreate `ap-mvp` and `ap-celery` services
        if: ${{ ! inputs.full_recreate }}
        run: docker --context autoproof-mini-app-bot-ctx compose -f docker-compose.yml -f ${{ env.DOCKER_COMPOSE_FILE }} up -d --force-recreate ap-telegram-mini-app-bot

      - name: Remove old images and resources
        run: docker --context autoproof-mini-app-bot-ctx system prune -af
